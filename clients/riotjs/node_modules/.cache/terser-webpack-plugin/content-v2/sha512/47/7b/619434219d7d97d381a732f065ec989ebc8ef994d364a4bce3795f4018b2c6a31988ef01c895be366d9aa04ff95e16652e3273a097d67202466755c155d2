{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{89:function(t,e,a){a(1).tag2(\"sentimentchannels\",'<div class=\"widget-2\"> <div class=\"card shadow-base overflow-hidden\"> <div class=\"card-header bg-transparent d-flex justify-content-between align-items-center\"> <h6 class=\"card-title tx-uppercase tx-12 mg-b-0\"> <img src=\"assets/images/components/icons/chat-teal.png\" width=\"20\" height=\"20\" class=\"mg-r-5\"> SENTIMENT PER CHANNEL </h6> <span class=\"cursor-default\" aria-hidden=\"true\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"???\">?</span> </div> <div class=\"ripple-loader\" if=\"{isLoading}\"></div> <div class=\"card-body pd-0 bd-color-gray-lighter height400 textcenter mg-t-20\" if=\"{notdata}\"> <div calss=\"textcenter mg-t-20\">No data found, please input another dates</div> </div> <div class=\"card-body pd-10 bd-color-gray-lighter height400\" id=\"sentimentchannel\" data-highcharts-chart=\"35\" if=\"{!notdata}\"></div> </div> </div>',\"\",\"\",(function(t){this.items=[],this.chart={},this.isLoading=!0,this.render=({items:t,ac:e})=>{APP.log(\"health-sentiment-channel: render\"),setTimeout(()=>{$('[data-toggle=\"tooltip\"]').tooltip()},1e3),this.notdata=!0;const a=[\"Twitter\",\"Tiktok\",\"Facebook\",\"Instagram\",\"Youtube\",\"Overall\"];let i={chart:{type:\"column\"},title:{text:\"\"},xAxis:{categories:a},colors:[\"#A3C85E\",\"#F3D760\",\"#E16976\"],yAxis:{min:0,title:{text:\"\"}},legend:{enabled:!0},credits:{enabled:!1},tooltip:{pointFormat:'<span style=\"color:{series.color}\">{series.name}</span>: <b>{point.y}</b> ({point.percentage:.0f}%)<br/>',shared:!0},plotOptions:{column:{stacking:\"percent\"}},exporting:{enabled:!1},series:[]},s=[];const n=[\"Positive\",\"Neutral\",\"Negative\"];for(const e of n){const i=e.toLowerCase(),n={name:e,pointWidth:50,data:[]};for(const e of a){const a=e.toLowerCase();\"overall\"!==a?n.data.push(_.result(t,`${a}.${i}`,0)):n.data.push(_.sum(n.data))}s.push(n)}i.series=s;Highcharts.chart(\"sentimentchannel\",i);this.update({notdata:!1,isLoading:!1})}}))},90:function(t,e,a){\"use strict\";a.r(e);var i=a(0);a(1).tag2(\"totalhealthindex\",'<div class=\"row row-sm\"> <div class=\"col-md-12 mg-t-10\" id=\"totalbuzzer\" style=\" padding-right: 0px;\"> <a each=\"{urutan}\" class=\"btn btn-icon mg-r-5 mg-t-10 widtbuzzer totalbuzzer shadow-base\" id=\"sent\"> <span class=\" pull-right cursor-default totalbuzzername\" aria-hidden=\"true\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"{tooltip}\">?</span> <img riot-src=\"{icon}\" width=\"15\" height=\"15\" class=\"mg-r-5\"> <span class=\"tx-roboto tx-bold\" style=\"color: #868ba1;\"> {title} </span> <h5 class=\"mg-t-5 colorblack\" style=\"padding-bottom: 3px;\"> <img if=\"{isLoading}\" alt=\"\" src=\"/assets/images/svg/loading.svg\" width=\"20\" mg-t-5> <span if=\"{!isLoading && summary}\"> {summary[name] ? summary[name].toLocaleString(\\'en\\',{maximumFractionDigits: 2}) : 0} </span> </h5> <p class=\"mg-t-m-10\"> <img if=\"{isLoadingDiff}\" alt=\"\" src=\"/assets/images/svg/loading.svg\" width=\"20\" mg-t-5> <span if=\"{!isLoadingDiff && diff}\" class=\"{diff[name].class}\" data-toggle=\"tooltip\" data-html=\"true\" title=\"current: {diff[name][\\'current\\']}<br>before: {diff[name][\\'before\\']}\"> <i class=\"{diff[name].icon}\"></i> {Math.abs(diff[name][\\'percentage\\']).toLocaleString(\\'en\\',{maximumFractionDigits: 1})}% </span> </p> </a> </div> </div> <div class=\"row row-sm\"> <div class=\"col-md-12 mg-t-20\"> <div class=\"widget-2\"> <div class=\"card shadow-base overflow-hidden\"> <div class=\"card-body pd-0 bd-color-gray-lighter \"> <div class=\"bd bd-gray-300 rounded table-responsive\"> <table class=\"tableinfuencer table responsive table-striped mg-b-0\"> <thead> <tr> <th scope=\"col\" class=\"tx-10\">CHANNELS</th> <th each=\"{componentSummary}\" scope=\"col\" class=\"tx-10 text-right\">{title}</th> </tr> </thead> <tbody> <tr each=\"{cs in channelSummary}\"> <th data-label=\"SERVICE\" scope=\"row\">{cs.title}</th> <td each=\"{componentSummary}\" data-label=\"{title}\" class=\"text-right\"> <img if=\"{isLoadingSummaryItems}\" alt=\"\" src=\"/assets/images/svg/loading.svg\" width=\"20\" mg-t-5> <span if=\"{!isLoadingSummaryItems && details}\">{this.result(details, cs.name, name, 0).toLocaleString(\\'en\\',{maximumFractionDigits: 2})} {unit}</span> </td> </tr> </tbody> </table> </div> </div> </div> </div> </div> </div>','totalhealthindex .font-mines,[data-is=\"totalhealthindex\"] .font-mines{ color: #d2dc35 !important; } totalhealthindex .font-up,[data-is=\"totalhealthindex\"] .font-up{ color: #90ee7e !important; } totalhealthindex .font-down,[data-is=\"totalhealthindex\"] .font-down{ color: #dc3545 !important; }',\"\",(function(t){const e=APP.services.HealthIndex;function a(){var t=$(\"#totalbuzzer\").width();if(t>500){$(\"#totalbuzzer\").css({\"padding-right\":\"0px\"});var e=(t-50)/5;if(t<1066)e=203.2;for(var a=document.getElementsByClassName(\"widtbuzzer\"),i=0;i<a.length;i++)a[i].style.width=e+\"px\"}else{a=document.getElementsByClassName(\"widtbuzzer\");$(\"#totalbuzzer\").css({\"padding-right\":\"10px\"});for(i=0;i<a.length;i++)a[i].style.width=\"100%\"}}this.channelSummary=[{name:\"twitter\",title:\"Twitter\"},{name:\"tiktok\",title:\"Tiktok\"},{name:\"instagram\",title:\"Instagram\"},{name:\"facebook\",title:\"Facebook\"},{name:\"youtube\",title:\"Youtube\"}],this.componentSummary=[{name:\"total_regular_posts\",title:\"REGULAR POSTS\",unit:\"\"},{name:\"total_potential_reach\",title:\"POTENTIAL REACH\",unit:\"\"},{name:\"total_interaction\",title:\"INTERACTIONS\",unit:\"\"},{name:\"total_potential_impact\",title:\"POTENTIAL IMPACT\",unit:\"\"},{name:\"total_positive\",title:\"POSITIVES\",unit:\"\"},{name:\"total_negative\",title:\"NEGATIVES\",unit:\"\"},{name:\"interaction_rate\",title:\"INTERACTION RATE\",unit:\"%\"},{name:\"engagement_rate\",title:\"ENGAGEMENT RATE\",unit:\"%\"},{name:\"conversation_rate\",title:\"CONVERSATION RATE\",unit:\"%\"},{name:\"applause_rate\",title:\"APPLAUSE RATE\",unit:\"%\"},{name:\"amplification_rate\",title:\"AMPLIFICATION RATE\",unit:\"%\"}],this.urutan=[{name:\"potential_reach\",title:\"POTENTIAL REACH\",icon:\"assets/images/components/icons/potential-grey.png\",tooltip:\"Potential reach is the estimated number of people that could have had contact with social media mentions from your buzzer(s). Potential Reach is based on the number buzzers, the number of their followers/subscribers/friends and the typical visibility percentage for the selected social networks (this percentage describes how many of their friends / followers on average actually see their posts)\"},{name:\"positive_rate\",title:\"POSITIVE SENTIMENT RATE\",icon:\"assets/images/components/icons/thumbs-up-grey.png\",tooltip:\"The number mentions with potentially positive sentiment\"},{name:\"negative_rate\",title:\"NEGATIVE SENTIMENT RATE\",icon:\"assets/images/components/icons/thumbs-down-grey.png\",tooltip:\"The number mentions with potentially negative sentiment\"},{name:\"engagement_rate\",title:\"ENGAGEMENT RATE\",icon:\"assets/images/components/icons/love-grey.png\",tooltip:\"is's about likes, comments, shares devided by followers\"},{name:\"interaction_rate\",title:\"INTERACTION RATE\",icon:\"assets/images/components/icons/chats-grey.png\",tooltip:\"average comment, like and share per post\"}],this.on(\"mount\",()=>{a()}),this.result=(t,e,a,s)=>Object(i.result)(t,`${e}.${a}`,s),window.onload=function(){a()},window.onresize=function(){a()},this.render=({summary:t,details:e,search:a})=>{let i={};t&&(i.summary=t,i.isLoading=!1,i.isLoadingSummaryItems=!1,i.details=e),this.update(i),this.loadDifference(t,a).then(()=>{this.update({isLoadingDiff:!1}),$('[data-toggle=\"tooltip\"]').tooltip()})},this.getHealth=async t=>{const a=new e;return await a.getSummary(t)},this.loadDifference=async(t,e)=>{const a=moment(e.since).set({h:0,m:0,s:0}),i=moment(e.until).set({h:0,m:0,s:0}),s=(i.diff(a,\"d\")||1)+1;e.since=a.clone().subtract(s,\"d\").format(\"YYYY-MM-DD\"),e.until=i.clone().subtract(s,\"d\").format(\"YYYY-MM-DD\");const{summary:n}=await this.getHealth(e);this.diff={};for(const e of this.urutan)this.diff[e.name]=this.getDiff(t[e.name],n[e.name])},this.getDiff=(t,e)=>{let a={percentage:(e-t)/t*100,before:e.toLocaleString(\"en\",{maximumFractionDigits:6}),current:t.toLocaleString(\"en\",{maximumFractionDigits:6}),icon:\"fa fa-minus\",class:\"font-mines\"};return e>t?(a.icon=\"fa fa-caret-down\",a.class=\"font-down\"):e<t&&(a.icon=\"fa fa-caret-up\",a.class=\"font-up\"),a}}))}}]);","extractedComments":[]}